From 408ecde39731797b5a85ac88c839486530407d2c Mon Sep 17 00:00:00 2001
From: Andre McCurdy <armccurdy@gmail.com>
Date: Mon, 28 Jan 2019 17:38:54 -0800
Subject: [PATCH] disable ARM unaligned access by default

Set the default state of the -munaligned-access command line option
to prevent reading or writing 16 or 32 bits values direcly from
addresses which are not 16 or 32 bit aligned (which the gcc would
otherwise do by default for ARMv6 and above).

Note that this patch is taken from the original Intel Puma6 toolchain
and the reasons behind it are not completely clear.

  https://gcc.gnu.org/onlinedocs/gcc/ARM-Options.html#ARM-Options

Signed-off-by: Andre McCurdy <armccurdy@gmail.com>
---
 gcc/config/arm/arm.opt | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/gcc/config/arm/arm.opt b/gcc/config/arm/arm.opt
index a1286a4..b5a3d03 100644
--- a/gcc/config/arm/arm.opt
+++ b/gcc/config/arm/arm.opt
@@ -272,7 +272,7 @@ Avoid overlapping destination and address registers on LDRD instructions
 that may trigger Cortex-M3 errata.
 
 munaligned-access
-Target Report Var(unaligned_access) Init(2) Save
+Target Report Var(unaligned_access) Init(0) Save
 Enable unaligned word and halfword accesses to packed data.
 
 mneon-for-64bits
-- 
1.9.1

